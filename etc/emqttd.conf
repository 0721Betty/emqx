##====================================================================
##
## Config File for EMQ 3.0
##
##====================================================================

##--------------------------------------------------------------------
## Erlang VM Args
##--------------------------------------------------------------------

## Erlang Node Name
vm.nodename = emqttd@127.0.0.1

## Cookie for distributed erlang
vm.setcookie = emqttdsecretcookie

## SMP support: enable, auto, disable
vm.smp = auto

## Enable kernel poll
vm.kernel_poll = on

## async thread pool
vm.async_threads = 32

## Erlang Process Limit
vm.process_limit = 256000

## Sets the maximum number of simultaneously existing ports for this system
vm.max_ports = 262144

## Set the distribution buffer busy limit (dist_buf_busy_limit)
vm.dist_buffer_size = 32MB

## Max ETS Tables.
## Note that mnesia and SSL will create temporary ets tables.
vm.max_ets_tables = 256000

## Tweak GC to run more often
vm.fullsweep_after = 1000

vm.crash_dump = log/emqttd_crash.dump

##--------------------------------------------------------------------
## MQTT Protocol
##--------------------------------------------------------------------

## Max ClientId Length Allowed.
mqtt.max_clientid_len = 1024

## Max Packet Size Allowed, 64K by default.
mqtt.max_packet_size = 64KB

## Client Idle Timeout (Second)
mqtt.client_idle_timeout = 30

##--------------------------------------------------------------------
## MQTT Listeners
##--------------------------------------------------------------------

## {listener, mqtt, 1883, [
##    %% Size of acceptor pool
##    {acceptors, 16},
##   %% Maximum number of concurrent clients
##    {max_clients, 512},
##    %% Mount point prefix
##    %% {mount_point, "prefix/"},
##    %% Socket Access Control
##    {access, [{allow, all}]},
##    %% Connection Options
##    {connopts, [
##        %% Rate Limit. Format is 'burst, rate', Unit is KB/Sec
##        %% {rate_limit, "100,10"} %% 100K burst, 10K rate
##    ]},
##    %% Socket Options
##    {sockopts, [
##        %Set buffer if hight thoughtput
##        %{recbuf, 4096},
##        %{sndbuf, 4096},
##        %{buffer, 4096},
##        %{nodelay, true},
##        {backlog, 1024}
##    ]}
## ]}.

listener.mqtt.plain = 1883
## IPv6
## listener.mqtt = 127.0.0.1:1883
## IPv6
## listener.mqtt = ::1:1883
listener.mqtt.plain.acceptors = 16
listener.mqtt.plain.max_clients = 512
listener.mqtt.plain.rate_limit = 100,10
listener.mqtt.plain.mount_point = prefix/

listener.mqtts = 8883
listener.mqtts.acceptors = 4
listener.mqtts.max_clients = 512
listener.mqtts.ssl.

    %% SSL certificate and key files
    {ssl, [{handshake_timeout, 10000},
           %% Mutual SSL Authentication option
           %% {verify, verify_peer},
           %% {cacertfile, "etc/ssl/ca.pem"},
           {certfile, "etc/ssl/ssl.crt"},
           {keyfile,  "etc/ssl/ssl.key"}]},

listener.http = 8083

##--------------------------------------------------------------------
## MQTT Session
##--------------------------------------------------------------------

## Max number of QoS 1 and 2 messages that can be “inflight” at one time.
## 0 means no limit
mqtt.session.max_inflight = 100

## Retry interval for redelivering QoS1/2 messages.
mqtt.session.unack_retry_interval = 60

## Awaiting PUBREL Timeout
mqtt.session.await_rel_timeout = 20

## Max Packets that Awaiting PUBREL, 0 means no limit
mqtt.session.max_awaiting_rel = 0

## Statistics Collection Interval(seconds)
mqtt.session.collect_interval = 0

## Expired after 2 day (unit: minute)
mqtt.session.expired_after = 2880

##--------------------------------------------------------------------
## MQTT Queue Parameters
##--------------------------------------------------------------------

## Type: simple | priority
mqtt.queue_type = simple

## Topic Priority: 0~255, Default is 0
## mqtt.queue_priority = topic/1=10,topic/2=8

## Max queue length. Enqueued messages when persistent client disconnected,
## or inflight window is full.
mqtt.queue_max_length = infinity

## Low-water mark of queued messages
mqtt.queue_low_watermark = 0.2

## High-water mark of queued messages
mqtt.queue_high_watermark = 0.6

## Queue Qos0 messages?
mqtt.queue_qos0 = true

##--------------------------------------------------------------------
## Broker
##--------------------------------------------------------------------

## System Interval of publishing broker $SYS Messages
broker.sys_interval = 60


##-------------------------------------------------------------------
## Log
##-------------------------------------------------------------------



##-------------------------------------------------------------------
## System Monitor
##-------------------------------------------------------------------

## Long GC, don't monitor in production mode for:
## https://github.com/erlang/otp/blob/feb45017da36be78d4c5784d758ede619fa7bfd3/erts/emulator/beam/erl_gc.c#L421

sysmon.long_gc = false

## Long Schedule(ms)
sysmon.long_schedule = 240

## 8M words. 32MB on 32-bit VM, 64MB on 64-bit VM.
## 8 * 1024 * 1024
sysmon.large_heap = 8388608

## Busy Port
sysmon.busy_port = false

## Busy Dist Port
sysmon.busy_dist_port = true

